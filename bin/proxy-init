#!/bin/bash

root=$(dirname $(dirname $0))

count0=$(grep -c daemon /etc/nginx/nginx.conf) || true
if [ $count0 -eq 0 ] ;then
	echo 'daemon off;' >> /etc/nginx/nginx.conf
fi

config=$(curl -s http://${MONITOR_HOST}:${MONITOR_PORT}/config)
fail=$?

if (( $fail )) ;then
	echo "Config unavailable."
	exit 1
else
	"$root/bin/json-to-env" "$config" >> "$root/etc/update.env"
fi

count1=$(curl -s http://${API_HOST}:${API_PORT}/ | jq '.paths|length')
fail=$?

if (( $fail )) || [ -z "$count1" ] ;then
	echo "API unavailable."
	exit 1
elif (( $count1 < 2 )) ;then
	echo "Schema unavailable."
	exit 1
fi

echo "Fetching secrets ..."
PARAM_PATH=${PARAM_ROOT}/${AWS_PROFILE}/nginx
url="http://${MONITOR_HOST}:${MONITOR_PORT}/secret"
secrets=$(curl -s -H "x-param-path: $PARAM_PATH" $url)

names='.|to_entries|.[]|.key'
list=$(echo $secrets | jq -r $names)
for i in ${list[@]} ;do
	value=".|to_entries|.[]|select(.key==\"$i\").value"
	text=$(echo $secrets | jq -r $value)
	case $i in
		dhparam)
			echo "$text" > /etc/pki/nginx/dhparam.pem
			;;
		ssl-crt)
			echo "$text" > /etc/pki/nginx/server.crt
			;;
		ssl-key)
			echo "$text" > /etc/pki/nginx/server.key
			;;
	esac
done
